<?php

/* Gelman building hours from WRLC API */

function gelmanHoursAPI($calDate, $weekDay) {

  $weekDayNum = date('w');

  $API = "https://api.wrlc.org/hours/copy-json.php?lib=gw&libid=1&daycount=1";

  // Set cache file name and path.
  $cacheFile = 'libraryHours-wrlc';
  $path = '/tmp/' . $cacheFile . '.cache';

  // Check to see if cached file is older than 15 minutes (900, units in seconds per UNIX/POSIX time), 
  // if so update cache.
  if ((!file_exists($path) || time() - filemtime($path) > 900) && $cache = fopen($path, 'w+'))
  {
      $wrlc_json = file_get_contents($API); // get json from scratch if old.
      fwrite($cache, $wrlc_json); // write block to cache.
      fclose($cache);
  }
  else
  {
      $wrlc_json = file_get_contents($path); // get block from cache file.
  }

  $jsondata = $wrlc_json;
  $jsondatafixed = str_replace("},]}}","}]}}" , $jsondata);
  $itemArray  = json_decode($jsondatafixed, true); // Decode JSON to associative array.

  $hoursAPI = $itemArray;

  //$index = $weekDayNum;
  $todayDay = $hoursAPI['library']['week'][0]['day1'];
  $todayOpen = $hoursAPI['library']['week'][0]['open'];
  $todayClose = $hoursAPI['library']['week'][0]['close'];
  if ($todayClose == "12:00AM") {
    // clarifying output to avoid confusion
    $todayClose = "midnight";
  }

  /* Set $schemaString */
  $timeRange = ''; // hard coded to work around issues above ^
  if ($weekDay !== 'Saturday' && $weekDay !== 'Sunday') {
    $schemaString = "Mo,Tu,We,Th,Fr " . $timeRange;
  }
  elseif ($weekDay == 'Saturday') {
    $schemaString = "Sa " . $timeRange;
  }
  elseif ($weekDay == 'Sunday') {
    $schemaString = "Su " . $timeRange;
  }
  /* Simple schema (for basic "days open") */
  $schemaString = 'Mo-Su';

  $theDate = new DateTime($calDate);

  /* this is a custom set of conditions to check against, only if the options at the WRLC interface http://www.libraries.wrlc.org/admin/hours/ don't provide the right combination of dates/times/message */
  include "library_hours_special.php";

  if (isset($specialDay)) {
    // check if var is set from included file above
    $gelmanToday = $specialDay;
  } 
  else {
    $gelmanToday = "Gelman Hours: " . $todayOpen . " to " . $todayClose . " <span style='font-size:.9em;'>(24-hours for GW students)</span>";
  }

  $hoursString = "<div itemscope itemtype='http://schema.org/Library'><p><span style='font-size:.9em;'>" . $weekDay . " " . date_format($theDate, 'F jS') . "</span><br /><span itemprop='openingHours' datetime='" . $schemaString . "'>"  . $gelmanToday. "</span></p><p class='library-hours-last'>See our <a href='/hours'>Hours</a> page for more</p></div>";

  return $hoursString;
}

/* SCRC Open Hours from WRLC API */

function scrcHoursAPI() {

  $API = "https://api.wrlc.org/hours/copy-json.php?lib=gw&libid=9&daycount=1";

  // Set cache file name and path.
  $cacheFile = 'scrcHours-wrlc';
  $path = '/tmp/' . $cacheFile . '.cache';

  // Check to see if cached file is older than 15 minutes (900, units in seconds per UNIX/POSIX time), 
  // if so update cache.
  if ((!file_exists($path) || time() - filemtime($path) > 900) && $cache = fopen($path, 'w+'))
  {
      $wrlc_json = file_get_contents($API); // get json from scratch if old.
      fwrite($cache, $wrlc_json); // write block to cache.
      fclose($cache);
  }
  else
  {
      $wrlc_json = file_get_contents($path); // get block from cache file.
  }

  $jsondata = $wrlc_json;
  $jsondatafixed = str_replace("},]}}","}]}}" , $jsondata);
  $itemArray  = json_decode($jsondatafixed, true); // Decode JSON to associative array.

  $hoursAPI = $itemArray;

  $todayDay = $hoursAPI['library']['week'][0]['day1'];
  $todayOpen = $hoursAPI['library']['week'][0]['open'];
  $todayClose = $hoursAPI['library']['week'][0]['close'];
  if ($todayClose == "12:00AM") {
    // clarifying string output to avoid confusion
    $todayClose = "midnight";
  }
  if ($todayOpen == "closed") {
    $joiner = "";
  }
  else {
    $joiner = "&nbsp;-&nbsp;";
  }
  if ($todayDay == "Saturday") {
    $todayOpen = "";
    $joiner = "";
    $extramsg = "<br />(by appointment only)";
  }
  else {
    $extramsg = "";
  }

  $todayString = "<p class='scrc-hours'>" . $todayDay . " Hours: " . $todayOpen . $joiner . $todayClose . $extramsg . "</p>";

  return $todayString;
}

/* Set the current date. */
$calDate = date('m/d');

/* Check for and grab URL var for testing date conditions. */
if (isset($_GET["date"])) {
  $calDate = $_GET["date"];
}

/* Creating full date with year so that we can use it to find the day of the week. */
$calDateLong = $calDate . "/" . date('y');
/* Exploding new full date into pieces to use in mktime below. Assigning variables to the pieces for readability. */
$pieces = explode("/", $calDateLong);
$theMonth = $pieces[0];
$theDay = $pieces[1]; 
$theYear = $pieces[2]; 
/* Creating new weekDay var based on the new full date above */
$weekDay = date("l", mktime(0,0,0,$theMonth,$theDay,$theYear));

/* Get the Gelman Building hours from the API */
$GLOBALS['gelmanTodayAPI'] = gelmanHoursAPI($calDate, $weekDay);

/* Get the SCRC hours from the API */
$GLOBALS['scrcTodayAPI'] = scrcHoursAPI();

/* Creating blocks. */

 /**
 * Implements hook_block_info().
 */
function library_hours_block_info() {
   $blocks = array();
   $blocks['library_hours_gelman_today'] = array(
     'info' => t("Today's Building Hours"),
     'region' => 'rsidebar',
     'visibility' => BLOCK_VISIBILITY_LISTED,
     'pages' => 'node/1',
   );
      $blocks['library_hours_scrc_today'] = array(
     'info' => t("Today's SCRC Hours"),
     'region' => 'sidebar',
     'visibility' => BLOCK_VISIBILITY_LISTED,
   );
 return $blocks;
 }

 /**
 * Implements hook_block_view().
 */

 function library_hours_block_view($delta = '') {
   $block = array();
   switch ($delta) {
     case 'library_hours_gelman_today':
       $the_block = $GLOBALS['gelmanTodayAPI'];
       $block['subject'] = t('Today in Gelman subject');
       $block['title'] = t('Building Hours');
       $block['content'] = $the_block;
       break;
     case 'library_hours_scrc_today':
       $the_block = $GLOBALS['scrcTodayAPI'];
       $block['subject'] = t('Today in SCRC subject');
       $block['title'] = t('SCRC Hours');
       $block['content'] = $the_block;
       break;
     }

 return $block;
 }
